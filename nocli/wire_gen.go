// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-micro/microwire"
	"github.com/go-micro/microwire/broker"
	"github.com/go-micro/microwire/registry"
	"github.com/go-micro/microwire/transport"
	"go-micro.dev/v4"
)

import (
	_ "github.com/go-micro/microwire/plugins/transport/http"
	_ "github.com/go-micro/plugins/v4/broker/http"
	_ "github.com/go-micro/plugins/v4/registry/mdns"
)

// Injectors from wire.go:

func newService(opts *microwire.Options, brokerConfig *broker.Config, registryConfig *registry.Config, transportConfig *transport.Config) (micro.Service, error) {
	diConfig, err := microwire.ProvideConfigFile(opts)
	if err != nil {
		return nil, err
	}
	brokerBroker, err := broker.Provide(diConfig, brokerConfig)
	if err != nil {
		return nil, err
	}
	registryRegistry, err := registry.Provide(diConfig, registryConfig)
	if err != nil {
		return nil, err
	}
	transportTransport, err := transport.Provide(diConfig, transportConfig)
	if err != nil {
		return nil, err
	}
	service, err := microwire.ProvideAllService(opts, brokerBroker, registryRegistry, transportTransport)
	if err != nil {
		return nil, err
	}
	return service, nil
}
