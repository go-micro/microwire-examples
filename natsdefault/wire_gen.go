// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-micro/microwire/microwire"
	"github.com/urfave/cli/v2"
)

import (
	_ "github.com/go-micro/plugins/v4/broker/nats"
	_ "github.com/go-micro/plugins/v4/registry/nats"
	_ "github.com/go-micro/plugins/v4/transport/nats"
)

// Injectors from wire.go:

func myApp(opts ...microwire.Option) (*cli.App, error) {
	initializeServiceFunc := microwire.ProvideDefaultServiceInitializer()
	options := microwire.ProvideOptions(opts, initializeServiceFunc)
	brokerFlags := ProvideBrokerFlags(options)
	internalFlags := microwire.ProvideDefaultFlags(options, brokerFlags)
	app := microwire.ProvideApp(options, internalFlags)
	return app, nil
}
